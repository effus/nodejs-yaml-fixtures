"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var getAliases = function (str) {
    var aliases = {};
    var expressions = str;
    var openParentheses = 0;
    var openQuote = '';
    for (var x = 0; x <= expressions.length; ++x) {
        var char = expressions.charAt(x);
        switch (char) {
            case '\'':
            case '"':
                if (x === 0 ||
                    expressions.charAt(x - 1) !== '\\') {
                    if (openQuote === char) {
                        openQuote = '';
                    }
                    else if (openQuote === '') {
                        openQuote = char;
                    }
                }
                break;
            case '(':
                if (openQuote === '') {
                    ++openParentheses;
                }
                break;
            case ')':
                if (openQuote === '') {
                    --openParentheses;
                }
                break;
            case ',':
            case ' ':
            case '':
                if (openParentheses === 0 &&
                    openQuote === '') {
                    if (char === ',' ||
                        char === '') {
                        var expression = expressions.substring(0, x).trim();
                        aliases[expression] = expression;
                        expressions = expressions.substring(x + 1);
                        x = 0;
                    }
                    else if (expressions.substring(x, x + 4).toUpperCase() === ' AS ') {
                        var expression = expressions.substring(x + 4).match(/^\s*(?:\"([^\"]*)\"|([\w\d]+))/i);
                        if (expression) {
                            var alias = expression[1] || expression[2];
                            aliases[alias] = expressions.substring(0, x).trim();
                            expressions = expressions.substring(x + 4 + alias.length + (expression[1] ? 2 : 0)).replace(/^\s*\,\s*/, '');
                            x = 0;
                        }
                        else {
                            console.error(expressions);
                            throw new Error('Invalid column alias detected.');
                        }
                    }
                }
                break;
        }
    }
    return aliases;
};
exports.default = getAliases;
